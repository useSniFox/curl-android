plugins {
    id("com.android.library")
    id("maven-publish")
    id("signing")
}

def enableLTO = providers.gradleProperty("enableLTO")

android {
    compileSdk = 35
    buildToolsVersion = "35.0.0"
    ndkVersion = "27.0.12077973"
    namespace = "io.github.vvb2060.ndk.curl"
    defaultConfig {
        minSdk = 21
        targetSdk = 35
        externalNativeBuild {
            ndkBuild {
                targets += [ "curl_static", "nghttp2_static", "nghttp3_static", "ngtcp2_crypto_static", "ngtcp2_static", "brotli_static" ]
                arguments += [ "-j${Runtime.runtime.availableProcessors()}" ]
                if (enableLTO.present) arguments += [ "enableLTO=1" ]
                abiFilters += [ "x86_64", "armeabi-v7a", "arm64-v8a" ]
            }
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    buildFeatures {
        buildConfig = false
        prefab = true
        prefabPublishing = true
    }

    externalNativeBuild {
        ndkBuild.path = "src/main/native/Android.mk"
    }

    prefab {
        curl_static {
            headers = "src/main/native/curl/include"
        }
        nghttp2_static {
            headers = "src/main/native/nghttp2/lib/includes"
        }
        ngtcp2_static {
            headers = "src/main/native/ngtcp2/lib/includes"
        }
        ngtcp2_crypto_static {
            headers = "src/main/native/ngtcp2/crypto/includes"
        }
        nghttp3_static {
            headers = "src/main/native/nghttp3/lib/includes"
        }
        brotli_static {
            headers = "src/main/native/brotli/c/include"
        }
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    if (enableLTO.present) {
        api("io.github.vvb2060.ndk:boringssl:20241024-lto-ndk27")
    } else {
        api("io.github.vvb2060.ndk:boringssl:20241024")
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            group = "io.github.vvb2060.ndk"
            artifactId = "curl"
            if (enableLTO.present) {
                version = "8.10.0-lto-ndk27"
            } else {
                version = "8.10.0"
            }
            afterEvaluate {
                from(components.release)
            }
            pom {
                name = "curl"
                description = "curl static library prefab for android."
                url = 'https://github.com/vvb2060/curl-android'
                licenses {
                    license {
                        name = "curl license"
                        url = 'https://curl.se/docs/copyright.html'
                    }
                }
                developers {
                    developer {
                        name = "vvb2060"
                        url = "https://github.com/vvb2060"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/vvb2060/curl-android.git"
                    url = "https://github.com/vvb2060/curl-android"
                }
            }
        }
    }
    repositories {
        maven {
            name = "ossrh"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials(PasswordCredentials)
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    def secretKeyRingFile = findProperty("signing.secretKeyRingFile")

    if (secretKeyRingFile != null && file(secretKeyRingFile).exists()) {
        sign(publishing.publications)
    } else if (signingKey != null) {
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign(publishing.publications)
    }
}
